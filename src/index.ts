import { CarWrong, CarOk, CarLogger } from './S';

// üíé S OF SOLID (SINGLE RESPONSIBILITY)
const solidSectionNode = document.getElementById('S');

if (solidSectionNode) {
  solidSectionNode.innerHTML = `
    <header>
      <h2>S: Principio de responsabilidad √∫nica</h2>
    </header>
    <section>
      <p>Como su propio nombre indica, establece que una clase, componente o microservicio debe ser responsable de una sola cosa (el tan aclamado t√©rmino ‚Äúdecoupled‚Äù en ingl√©s). Si por el contrario, una clase tiene varias responsabilidades, esto implica que el cambio en una responsabilidad provocar√° la modificaci√≥n en otra responsabilidad.</p>
    </section>
`;
}

// ‚ùå Wrong example
const myCarWrong = new CarWrong("Mercedes", "Blue");

console.log("‚ùå");
myCarWrong.description();

// ‚úîÔ∏è Good example
const myCarOk = new CarOk("Mercedes", "Blue");
const myCarLogger = new CarLogger(myCarOk);

console.log("‚úîÔ∏è");
myCarLogger.description();
